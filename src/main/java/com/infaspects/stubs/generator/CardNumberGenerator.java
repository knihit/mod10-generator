package com.infaspects.stubs.generator;

import com.infaspects.stubs.util.CheckDigitHelper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.stereotype.Component;

/**
 * Generate credit, debit card numbers that are mod10 compliant
 */
@Component
public class CardNumberGenerator {

    /**
     * The bank identification number
     */
    private String bankIdentificationNum;

    /**
     * Center code as applicable
     */
    private String centerCode;

    /**
     * Client's identity
     */
    private String clientID;


    @Bean
    public Mod10NumberGenerator getMod10NumberGenerator(){
        return new Mod10NumberGenerator(9);
    }


    @Autowired
    Mod10NumberGenerator mod10NumberGenerator;

    /**
     * Initialize the instance with BIN, Center Code & Client Identity
     *
     * @param bankIdentificationNum
     * @param centerCode
     * @param clientID
     */
    public CardNumberGenerator(String bankIdentificationNum, String centerCode, String clientID) {
        this.bankIdentificationNum = bankIdentificationNum;
        this.centerCode = centerCode;
        this.clientID = clientID;
    }

    /**
     * Initialize the instance with BIN & Center Code. Since Client Identity is not initialized, it
     * will generated by the method. The default length of the Client Identity is taken as 9 digits
     *
     * @param bankIdentificationNum
     * @param centerCode
     */
    public CardNumberGenerator (String bankIdentificationNum, String centerCode) {
        this.bankIdentificationNum = bankIdentificationNum;
        this.centerCode = centerCode;
    }

    /**
     * Method that returns client card
     *
     * @return client card number as String
     */
    public String generateClientCard () {
        StringBuilder clientCard = new StringBuilder();

        if ("".equals(clientID) || null == clientID) {
            clientID = mod10NumberGenerator.getMod10Number();
        }

        clientCard.append(bankIdentificationNum).append(centerCode).append(clientID);
        return clientCard.append(CheckDigitHelper.generateCheckDigit(clientCard.toString())).toString();
    }
}
